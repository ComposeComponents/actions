extends "common/base.pkl"
import "common/common.pkl"

hidden modules: List<String>

hidden versionUpdateCommit: Boolean = false
hidden extraTags: Boolean = true
hidden uploadToGhPages = false

local overwriteFile = new CommandStep {
    run = """
    echo "${{ needs.version.outputs.version }}" > .version
    """
}

name = "Build Pkl"

on = new On {
    push = new Push {
        branches = new Listing {
            "main"
            "develop"
            "release/**"
        }
    }
    pull_request = new PullRequest {
        branches = new Listing {
            "main"
            "develop"
        }
    }
}

jobs = new Mapping {
    ["version"] = common.version(0)
    ["should-release"] = new Job {
        outputs = new Mapping {
            ["proceed"] = "${{ steps.release.outputs.proceed && github.event_name != 'pull_request' }}"
        }
        steps = new Listing {
            new ActionStep {
                id = "release"
                uses = "phish108/release-check@1.0.15"
                with = new Mapping {
                    ["github-token"] = "${{ secrets.GITHUB_TOKEN }}"
                    ["protected-paths"] = """
                    README.md
                    .version
                    """
                }
            }
        }
    }
    ["release"] = new Job {
        needs = new Listing {
            "version"
            "should-release"
        }
        permissions = new Mapping {
            ["contents"] = "write"
        }
        outputs = new Mapping {
            ["upload_url"] = "${{ steps.create_release.outputs.upload_url }}"
        }
        `if` = "needs.should-release.outputs.proceed"
        steps = new Listing {
            common.checkout
            ...common.create_release
            ...(
                if(extraTags) new Listing {
                    for (mdule in modules) {
                        new ActionStep {
                            uses = "pxpm/github-tag-action@1.0.1"
                            with = new Mapping {
                                ["repo-token"] = "${{ secrets.GITHUB_TOKEN }}"
                                ["tag"] = "\(mdule)@${{ needs.version.outputs.version }}"
                            }
                        }
                    }
                } else new Listing {}
            )
        }
    }
    ["upload-project"] = new Job {
        needs = new Listing {
            "version"
            "release"
        }
        permissions = new Mapping {
            ["contents"] = "write"
        }
        steps = new Listing {
            common.checkout
            new ActionStep {
                name = "Install Pkl"
                uses = "pkl-community/setup-pkl@v0"
                with = new Mapping {
                    ["pkl-version"] = "0.25.3"
                }
            }
            overwriteFile
            new CommandStep {
                name = "Package project"
                run = "pkl project package src"
            }
            for (mdule in modules) {
                new CommandStep {
                    name = "Upload Release Artifact"
                    env = new Mapping {
                        ["GITHUB_TOKEN"] = "${{ secrets.GITHUB_TOKEN }}"
                    }
                    run = """
                    TAG=\(mdule)@${{ needs.version.outputs.version }}
                    gh release upload v${{ needs.version.outputs.version }} .out/$TAG/*
                    gh release edit v${{ needs.version.outputs.version }} -t v${{ needs.version.outputs.version }}
                    """
                }
            }
        }
    }
    ...(if (uploadToGhPages)
        new Mapping {
            ["publish-project"] = new Job {
                needs = new Listing {
                    "version"
                    "release"
                }
                permissions = new Mapping {
                    ["contents"] = "write"
                }
                steps = new Listing {
                    common.checkout
                    overwriteFile
                    new ActionStep {
                        name = "Upload to pages"
                        uses = "emilymclean/pkl-upload-package@v1.1.0"
                        with = new Mapping {
                            ["input-directory"] = "src"
                        }
                    }
                }
            }
        } 
    else new Mapping {})
}.toMap().filter((k,v) -> v != null).toMapping()