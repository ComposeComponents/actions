import "base-import.pkl" as actions

checkout = new actions.ActionStep {
    uses = "actions/checkout@v4"
    with = new Mapping {
        ["fetch-depth"] = 0
    }
}

setupJdk = new actions.ActionStep {
    name = "Set up JDK 17"
    uses = "actions/setup-java@v4"
    with = new Mapping {
        ["java-version"] = "17"
        ["distribution"] = "temurin"
    }
}

create_release = new Listing {
    new actions.ActionStep {
        name = "Create tag for release"
        uses = "rickstaa/action-create-tag@v1"
        with = new Mapping {
            ["tag"] = "v${{ needs.version.outputs.version }}"
        }
    }
    new actions.ActionStep {
        id = "create_release"
        name = "Create Release"
        uses = "softprops/action-gh-release@v2"
        with = new Mapping {
            ["token"] = "${{ secrets.GITHUB_TOKEN }}"
            ["tag_name"] = "v${{ needs.version.outputs.version }}"
            ["name"] = "Release ${{ needs.version.outputs.version }}"
            ["draft"] = false
            ["prerelease"] = "${{ github.ref != 'refs/heads/main' }}"
        }
    }
}

function gradle(
    actionName: String, 
    command: String,
    _env: Mapping
): Listing<actions.Step> = new Listing {
    new actions.ActionStep {
        name = "Setup gradle"
        uses = "gradle/actions/setup-gradle@v3"
    }
    let(alteredCommand = command.replaceAll("\n", " \\\n"))
        new actions.CommandStep {
            name = "\(actionName) with Gradle"
            run = "./gradlew \(alteredCommand)"
            env = _env
        }
}

function signApp(path: String): actions.ActionStep = new actions.ActionStep {
    id = "sign"
    uses = "ilharp/sign-android-release@v1"
    name = "Sign app"
    with = new Mapping {
        ["releaseDir"] = path
        ["signingKey"] = "${{ secrets.SIGNING_KEY }}"
        ["keyAlias"] = "${{ secrets.ALIAS }}"
        ["keyStorePassword"] = "${{ secrets.KEY_STORE_PASSWORD }}"
        ["keyPassword"] = "${{ secrets.KEY_PASSWORD }}"
        ["buildToolsVersion"] = "33.0.0"
    }
}

function version(versionNumberOffset: Int) = new actions.Job {
    outputs = new Mapping {
        ["version"] = "${{ steps.gitversion.outputs.semVer }}"
        ["versionCode"] = "${{ steps.run-number.outputs.versionCode }}"
    }
    steps = new Listing {
        checkout
        new actions.ActionStep {
            name = "Install GitVersion"
            uses = "gittools/actions/gitversion/setup@v3.0.0"
            with = new Mapping {
                ["versionSpec"] = "5.x"
            }
        }
        new actions.ActionStep {
            name = "Use GitVersion"
            id = "gitversion"
            uses = "gittools/actions/gitversion/execute@v3.0.0"
            with = new Mapping {
                ["useConfigFile"] = true
                ["configFilePath"] = "./gitversion.yml"
            }
        }
        new actions.CommandStep {
            id = "run-number"
            run = """
            current_run_number=${{ github.run_number }}
            new_number=$((current_run_number+\(versionNumberOffset)))
            echo "versionCode=${new_number}" >> $GITHUB_OUTPUT
            """
        }
        new actions.CommandStep {
            name = "Generate Job Summary"
            run = "echo \"# Version Info\nSemantic Version: ${{ steps.gitversion.outputs.semVer }}\nVersion Number: ${{ steps.run-number.outputs.versionCode }}\" >> $GITHUB_STEP_SUMMARY"
        }
    }
}